#nullable enable
#pragma warning disable CS1998
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.AspNetCore.Http
{
    sealed class ActionRequestDelegateClosure : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => false;
        
        private readonly System.Action _delegate;
        
        public ActionRequestDelegateClosure(System.Action @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            _delegate();
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            _delegate();
        }
    }
    
    sealed class FuncRequestDelegateClosure<R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => false;
        
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            R? result = _delegate();
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            R? result = _delegate();
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => false;
        
        private readonly System.Action _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            _delegate();
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            _delegate();
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => false;
        
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            R? result = _delegate();
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            R? result = _delegate();
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly System.Action<T0> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly System.Action<T0> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly System.Action<T0, T1> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly System.Action<T0, T1> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly System.Action<T0, T1, T2> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly System.Action<T0, T1, T2> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly System.Action<T0, T1, T2, T3> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly System.Action<T0, T1, T2, T3> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly System.Action<T0, T1, T2, T3, T4> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly System.Action<T0, T1, T2, T3, T4> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly System.Action<T0, T1, T2, T3, T4, T5> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly System.Action<T0, T1, T2, T3, T4, T5> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody || _parameterBinder12.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T12> _parameterBinder12;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
            _parameterBinder12 = Microsoft.AspNetCore.Http.ParameterBinder<T12>.Create(parameters[12]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder12.TryBindValue(httpContext, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await _parameterBinder12.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody || _parameterBinder12.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T12> _parameterBinder12;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
            _parameterBinder12 = Microsoft.AspNetCore.Http.ParameterBinder<T12>.Create(parameters[12]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder12.TryBindValue(httpContext, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await _parameterBinder12.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T12>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly string _name12;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
            _name12 = parameters[12].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T12>.TryBindValueBasedOnType(httpContext, _name12, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T12>.BindBodyBasedOnType(httpContext, _name12);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T12>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly string _name12;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
            _name12 = parameters[12].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T12>.TryBindValueBasedOnType(httpContext, _name12, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T12>.BindBodyBasedOnType(httpContext, _name12);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody || _parameterBinder12.IsBody || _parameterBinder13.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T12> _parameterBinder12;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T13> _parameterBinder13;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
            _parameterBinder12 = Microsoft.AspNetCore.Http.ParameterBinder<T12>.Create(parameters[12]);
            _parameterBinder13 = Microsoft.AspNetCore.Http.ParameterBinder<T13>.Create(parameters[13]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder12.TryBindValue(httpContext, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder13.TryBindValue(httpContext, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await _parameterBinder12.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await _parameterBinder13.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody || _parameterBinder12.IsBody || _parameterBinder13.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T12> _parameterBinder12;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T13> _parameterBinder13;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
            _parameterBinder12 = Microsoft.AspNetCore.Http.ParameterBinder<T12>.Create(parameters[12]);
            _parameterBinder13 = Microsoft.AspNetCore.Http.ParameterBinder<T13>.Create(parameters[13]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder12.TryBindValue(httpContext, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder13.TryBindValue(httpContext, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await _parameterBinder12.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await _parameterBinder13.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T12>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T13>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly string _name12;
        private readonly string _name13;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
            _name12 = parameters[12].Name!;
            _name13 = parameters[13].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T12>.TryBindValueBasedOnType(httpContext, _name12, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T13>.TryBindValueBasedOnType(httpContext, _name13, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T12>.BindBodyBasedOnType(httpContext, _name12);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T13>.BindBodyBasedOnType(httpContext, _name13);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T12>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T13>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly string _name12;
        private readonly string _name13;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
            _name12 = parameters[12].Name!;
            _name13 = parameters[13].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T12>.TryBindValueBasedOnType(httpContext, _name12, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T13>.TryBindValueBasedOnType(httpContext, _name13, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T12>.BindBodyBasedOnType(httpContext, _name12);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T13>.BindBodyBasedOnType(httpContext, _name13);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody || _parameterBinder12.IsBody || _parameterBinder13.IsBody || _parameterBinder14.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T12> _parameterBinder12;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T13> _parameterBinder13;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T14> _parameterBinder14;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
            _parameterBinder12 = Microsoft.AspNetCore.Http.ParameterBinder<T12>.Create(parameters[12]);
            _parameterBinder13 = Microsoft.AspNetCore.Http.ParameterBinder<T13>.Create(parameters[13]);
            _parameterBinder14 = Microsoft.AspNetCore.Http.ParameterBinder<T14>.Create(parameters[14]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder12.TryBindValue(httpContext, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder13.TryBindValue(httpContext, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder14.TryBindValue(httpContext, out var arg14))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder14);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await _parameterBinder12.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await _parameterBinder13.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T14? arg14, success) = await _parameterBinder14.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder14);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody || _parameterBinder12.IsBody || _parameterBinder13.IsBody || _parameterBinder14.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T12> _parameterBinder12;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T13> _parameterBinder13;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T14> _parameterBinder14;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
            _parameterBinder12 = Microsoft.AspNetCore.Http.ParameterBinder<T12>.Create(parameters[12]);
            _parameterBinder13 = Microsoft.AspNetCore.Http.ParameterBinder<T13>.Create(parameters[13]);
            _parameterBinder14 = Microsoft.AspNetCore.Http.ParameterBinder<T14>.Create(parameters[14]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder12.TryBindValue(httpContext, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder13.TryBindValue(httpContext, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder14.TryBindValue(httpContext, out var arg14))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder14);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await _parameterBinder12.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await _parameterBinder13.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T14? arg14, success) = await _parameterBinder14.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder14);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T12>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T13>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T14>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly string _name12;
        private readonly string _name13;
        private readonly string _name14;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
            _name12 = parameters[12].Name!;
            _name13 = parameters[13].Name!;
            _name14 = parameters[14].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T12>.TryBindValueBasedOnType(httpContext, _name12, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T13>.TryBindValueBasedOnType(httpContext, _name13, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T14>.TryBindValueBasedOnType(httpContext, _name14, out var arg14))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T14>(httpContext, _name14);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T12>.BindBodyBasedOnType(httpContext, _name12);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T13>.BindBodyBasedOnType(httpContext, _name13);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T14? arg14, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T14>.BindBodyBasedOnType(httpContext, _name14);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T14>(httpContext, _name14);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T12>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T13>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T14>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly string _name12;
        private readonly string _name13;
        private readonly string _name14;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
            _name12 = parameters[12].Name!;
            _name13 = parameters[13].Name!;
            _name14 = parameters[14].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T12>.TryBindValueBasedOnType(httpContext, _name12, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T13>.TryBindValueBasedOnType(httpContext, _name13, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T14>.TryBindValueBasedOnType(httpContext, _name14, out var arg14))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T14>(httpContext, _name14);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T12>.BindBodyBasedOnType(httpContext, _name12);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T13>.BindBodyBasedOnType(httpContext, _name13);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T14? arg14, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T14>.BindBodyBasedOnType(httpContext, _name14);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T14>(httpContext, _name14);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class ActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody || _parameterBinder12.IsBody || _parameterBinder13.IsBody || _parameterBinder14.IsBody || _parameterBinder15.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T12> _parameterBinder12;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T13> _parameterBinder13;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T14> _parameterBinder14;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T15> _parameterBinder15;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> _delegate;
        
        public ActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
            _parameterBinder12 = Microsoft.AspNetCore.Http.ParameterBinder<T12>.Create(parameters[12]);
            _parameterBinder13 = Microsoft.AspNetCore.Http.ParameterBinder<T13>.Create(parameters[13]);
            _parameterBinder14 = Microsoft.AspNetCore.Http.ParameterBinder<T14>.Create(parameters[14]);
            _parameterBinder15 = Microsoft.AspNetCore.Http.ParameterBinder<T15>.Create(parameters[15]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder12.TryBindValue(httpContext, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder13.TryBindValue(httpContext, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder14.TryBindValue(httpContext, out var arg14))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder14);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder15.TryBindValue(httpContext, out var arg15))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder15);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!, arg15!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await _parameterBinder12.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await _parameterBinder13.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T14? arg14, success) = await _parameterBinder14.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder14);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T15? arg15, success) = await _parameterBinder15.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder15);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!, arg15!);
        }
    }
    
    sealed class FuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => _parameterBinder0.IsBody || _parameterBinder1.IsBody || _parameterBinder2.IsBody || _parameterBinder3.IsBody || _parameterBinder4.IsBody || _parameterBinder5.IsBody || _parameterBinder6.IsBody || _parameterBinder7.IsBody || _parameterBinder8.IsBody || _parameterBinder9.IsBody || _parameterBinder10.IsBody || _parameterBinder11.IsBody || _parameterBinder12.IsBody || _parameterBinder13.IsBody || _parameterBinder14.IsBody || _parameterBinder15.IsBody;
        
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T0> _parameterBinder0;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T1> _parameterBinder1;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T2> _parameterBinder2;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T3> _parameterBinder3;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T4> _parameterBinder4;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T5> _parameterBinder5;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T6> _parameterBinder6;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T7> _parameterBinder7;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T8> _parameterBinder8;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T9> _parameterBinder9;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T10> _parameterBinder10;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T11> _parameterBinder11;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T12> _parameterBinder12;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T13> _parameterBinder13;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T14> _parameterBinder14;
        private readonly Microsoft.AspNetCore.Http.ParameterBinder<T15> _parameterBinder15;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R?> _delegate;
        
        public FuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _parameterBinder0 = Microsoft.AspNetCore.Http.ParameterBinder<T0>.Create(parameters[0]);
            _parameterBinder1 = Microsoft.AspNetCore.Http.ParameterBinder<T1>.Create(parameters[1]);
            _parameterBinder2 = Microsoft.AspNetCore.Http.ParameterBinder<T2>.Create(parameters[2]);
            _parameterBinder3 = Microsoft.AspNetCore.Http.ParameterBinder<T3>.Create(parameters[3]);
            _parameterBinder4 = Microsoft.AspNetCore.Http.ParameterBinder<T4>.Create(parameters[4]);
            _parameterBinder5 = Microsoft.AspNetCore.Http.ParameterBinder<T5>.Create(parameters[5]);
            _parameterBinder6 = Microsoft.AspNetCore.Http.ParameterBinder<T6>.Create(parameters[6]);
            _parameterBinder7 = Microsoft.AspNetCore.Http.ParameterBinder<T7>.Create(parameters[7]);
            _parameterBinder8 = Microsoft.AspNetCore.Http.ParameterBinder<T8>.Create(parameters[8]);
            _parameterBinder9 = Microsoft.AspNetCore.Http.ParameterBinder<T9>.Create(parameters[9]);
            _parameterBinder10 = Microsoft.AspNetCore.Http.ParameterBinder<T10>.Create(parameters[10]);
            _parameterBinder11 = Microsoft.AspNetCore.Http.ParameterBinder<T11>.Create(parameters[11]);
            _parameterBinder12 = Microsoft.AspNetCore.Http.ParameterBinder<T12>.Create(parameters[12]);
            _parameterBinder13 = Microsoft.AspNetCore.Http.ParameterBinder<T13>.Create(parameters[13]);
            _parameterBinder14 = Microsoft.AspNetCore.Http.ParameterBinder<T14>.Create(parameters[14]);
            _parameterBinder15 = Microsoft.AspNetCore.Http.ParameterBinder<T15>.Create(parameters[15]);
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!_parameterBinder0.TryBindValue(httpContext, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder1.TryBindValue(httpContext, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder2.TryBindValue(httpContext, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder3.TryBindValue(httpContext, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder4.TryBindValue(httpContext, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder5.TryBindValue(httpContext, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder6.TryBindValue(httpContext, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder7.TryBindValue(httpContext, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder8.TryBindValue(httpContext, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder9.TryBindValue(httpContext, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder10.TryBindValue(httpContext, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder11.TryBindValue(httpContext, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder12.TryBindValue(httpContext, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder13.TryBindValue(httpContext, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder14.TryBindValue(httpContext, out var arg14))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder14);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!_parameterBinder15.TryBindValue(httpContext, out var arg15))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder15);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!, arg15!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await _parameterBinder0.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await _parameterBinder1.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await _parameterBinder2.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await _parameterBinder3.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await _parameterBinder4.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await _parameterBinder5.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await _parameterBinder6.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await _parameterBinder7.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await _parameterBinder8.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await _parameterBinder9.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await _parameterBinder10.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await _parameterBinder11.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await _parameterBinder12.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await _parameterBinder13.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T14? arg14, success) = await _parameterBinder14.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder14);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T15? arg15, success) = await _parameterBinder15.BindBodyOrValueAsync(httpContext);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed(httpContext, _parameterBinder15);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!, arg15!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
    sealed class TypeOnlyActionRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T12>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T13>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T14>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T15>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly string _name12;
        private readonly string _name13;
        private readonly string _name14;
        private readonly string _name15;
        private readonly System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> _delegate;
        
        public TypeOnlyActionRequestDelegateClosure(System.Action<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
            _name12 = parameters[12].Name!;
            _name13 = parameters[13].Name!;
            _name14 = parameters[14].Name!;
            _name15 = parameters[15].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T12>.TryBindValueBasedOnType(httpContext, _name12, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T13>.TryBindValueBasedOnType(httpContext, _name13, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T14>.TryBindValueBasedOnType(httpContext, _name14, out var arg14))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T14>(httpContext, _name14);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T15>.TryBindValueBasedOnType(httpContext, _name15, out var arg15))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T15>(httpContext, _name15);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!, arg15!);
            
            return System.Threading.Tasks.Task.CompletedTask;
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T12>.BindBodyBasedOnType(httpContext, _name12);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T13>.BindBodyBasedOnType(httpContext, _name13);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T14? arg14, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T14>.BindBodyBasedOnType(httpContext, _name14);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T14>(httpContext, _name14);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T15? arg15, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T15>.BindBodyBasedOnType(httpContext, _name15);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T15>(httpContext, _name15);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!, arg15!);
        }
    }
    
    sealed class TypeOnlyFuncRequestDelegateClosure<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R> : Microsoft.AspNetCore.Http.RequestDelegateClosure
    {
        public override bool HasBody => Microsoft.AspNetCore.Http.ParameterBinder<T0>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T1>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T2>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T3>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T4>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T5>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T6>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T7>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T8>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T9>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T10>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T11>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T12>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T13>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T14>.HasBodyBasedOnType || Microsoft.AspNetCore.Http.ParameterBinder<T15>.HasBodyBasedOnType;
        
        private readonly string _name0;
        private readonly string _name1;
        private readonly string _name2;
        private readonly string _name3;
        private readonly string _name4;
        private readonly string _name5;
        private readonly string _name6;
        private readonly string _name7;
        private readonly string _name8;
        private readonly string _name9;
        private readonly string _name10;
        private readonly string _name11;
        private readonly string _name12;
        private readonly string _name13;
        private readonly string _name14;
        private readonly string _name15;
        private readonly Microsoft.AspNetCore.Http.ResultInvoker<R> _resultInvoker;
        private readonly System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R?> _delegate;
        
        public TypeOnlyFuncRequestDelegateClosure(System.Func<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R?> @delegate, System.Reflection.ParameterInfo[] parameters)
        {
            _delegate = @delegate;
            _resultInvoker = Microsoft.AspNetCore.Http.ResultInvoker<R>.Create();
            _name0 = parameters[0].Name!;
            _name1 = parameters[1].Name!;
            _name2 = parameters[2].Name!;
            _name3 = parameters[3].Name!;
            _name4 = parameters[4].Name!;
            _name5 = parameters[5].Name!;
            _name6 = parameters[6].Name!;
            _name7 = parameters[7].Name!;
            _name8 = parameters[8].Name!;
            _name9 = parameters[9].Name!;
            _name10 = parameters[10].Name!;
            _name11 = parameters[11].Name!;
            _name12 = parameters[12].Name!;
            _name13 = parameters[13].Name!;
            _name14 = parameters[14].Name!;
            _name15 = parameters[15].Name!;
        }
        
        public override System.Threading.Tasks.Task ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T0>.TryBindValueBasedOnType(httpContext, _name0, out var arg0))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T1>.TryBindValueBasedOnType(httpContext, _name1, out var arg1))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T2>.TryBindValueBasedOnType(httpContext, _name2, out var arg2))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T3>.TryBindValueBasedOnType(httpContext, _name3, out var arg3))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T4>.TryBindValueBasedOnType(httpContext, _name4, out var arg4))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T5>.TryBindValueBasedOnType(httpContext, _name5, out var arg5))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T6>.TryBindValueBasedOnType(httpContext, _name6, out var arg6))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T7>.TryBindValueBasedOnType(httpContext, _name7, out var arg7))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T8>.TryBindValueBasedOnType(httpContext, _name8, out var arg8))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T9>.TryBindValueBasedOnType(httpContext, _name9, out var arg9))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T10>.TryBindValueBasedOnType(httpContext, _name10, out var arg10))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T11>.TryBindValueBasedOnType(httpContext, _name11, out var arg11))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T12>.TryBindValueBasedOnType(httpContext, _name12, out var arg12))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T13>.TryBindValueBasedOnType(httpContext, _name13, out var arg13))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T14>.TryBindValueBasedOnType(httpContext, _name14, out var arg14))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T14>(httpContext, _name14);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            if (!Microsoft.AspNetCore.Http.ParameterBinder<T15>.TryBindValueBasedOnType(httpContext, _name15, out var arg15))
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T15>(httpContext, _name15);
                httpContext.Response.StatusCode = 400;
                return System.Threading.Tasks.Task.CompletedTask;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!, arg15!);
            
            return _resultInvoker.Invoke(httpContext, result);
        }
        
        public override async System.Threading.Tasks.Task ProcessRequestWithBodyAsync(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var success = false;
            (T0? arg0, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T0>.BindBodyBasedOnType(httpContext, _name0);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T0>(httpContext, _name0);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T1? arg1, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T1>.BindBodyBasedOnType(httpContext, _name1);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T1>(httpContext, _name1);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T2? arg2, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T2>.BindBodyBasedOnType(httpContext, _name2);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T2>(httpContext, _name2);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T3? arg3, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T3>.BindBodyBasedOnType(httpContext, _name3);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T3>(httpContext, _name3);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T4? arg4, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T4>.BindBodyBasedOnType(httpContext, _name4);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T4>(httpContext, _name4);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T5? arg5, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T5>.BindBodyBasedOnType(httpContext, _name5);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T5>(httpContext, _name5);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T6? arg6, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T6>.BindBodyBasedOnType(httpContext, _name6);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T6>(httpContext, _name6);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T7? arg7, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T7>.BindBodyBasedOnType(httpContext, _name7);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T7>(httpContext, _name7);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T8? arg8, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T8>.BindBodyBasedOnType(httpContext, _name8);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T8>(httpContext, _name8);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T9? arg9, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T9>.BindBodyBasedOnType(httpContext, _name9);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T9>(httpContext, _name9);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T10? arg10, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T10>.BindBodyBasedOnType(httpContext, _name10);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T10>(httpContext, _name10);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T11? arg11, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T11>.BindBodyBasedOnType(httpContext, _name11);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T11>(httpContext, _name11);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T12? arg12, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T12>.BindBodyBasedOnType(httpContext, _name12);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T12>(httpContext, _name12);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T13? arg13, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T13>.BindBodyBasedOnType(httpContext, _name13);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T13>(httpContext, _name13);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T14? arg14, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T14>.BindBodyBasedOnType(httpContext, _name14);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T14>(httpContext, _name14);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            (T15? arg15, success) = await Microsoft.AspNetCore.Http.ParameterBinder<T15>.BindBodyBasedOnType(httpContext, _name15);
            
            if (!success)
            {
                Microsoft.AspNetCore.Http.ParameterLog.ParameterBindingFailed<T15>(httpContext, _name15);
                httpContext.Response.StatusCode = 400;
                return;
            }
            
            R? result = _delegate(arg0!, arg1!, arg2!, arg3!, arg4!, arg5!, arg6!, arg7!, arg8!, arg9!, arg10!, arg11!, arg12!, arg13!, arg14!, arg15!);
            
            await _resultInvoker.Invoke(httpContext, result);
        }
    }
    
}

